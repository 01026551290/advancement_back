name: Deploy Django

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: SECRET_KEY

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmysqlclient-dev
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env 
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env

      - name: Run migrations
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Collect static files
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput

      - name: Build Docker image
        run: |
          docker build -t advancement_back .

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag advancement_back godjinsoo0524/advancement_back:latest
          docker push godjinsoo0524/advancement_back:latest

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy .env file to server
        run: |
          scp -o StrictHostKeyChecking=no .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          docker pull godjinsoo0524/advancement_back:latest
          docker stop advancement_back_container || true
          docker rm advancement_back_container || true
          docker run -d --name advancement_back_container --env-file .env -p 8000:8000 godjinsoo0524/advancement_back:latest
          EOF
